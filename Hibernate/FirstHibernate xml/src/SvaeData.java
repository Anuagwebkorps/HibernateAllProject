import java.util.Scanner;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import pp.Emp;

public class SvaeData {

	public static void main(String[] args) { 
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter User id:");
		int id =sc.nextInt();
		System.out.println("Enter User Name:");
		String name =sc.next();
		System.out.println("Enter User Job:");
		String job =sc.next();
		
		/*
		Configuration cfg=new Configuration(); //SessionFactory ka obj banane ke liye hume Configuration ka obj bnane padhe gaa
		cfg=cfg.configure();//"hibernate.cfg.xml" //yaha per by difault ye hibernate.cfg.xml hi pass hota hai...thats why we use {hibernate.cfg.xml}name. agar hum configure class ka name {hibernate.cfg.xml}ye nahi rakhte to hume ye method ke andar ye xyz.cfg.xml name pass krna padhta hai		
		SessionFactory fac=cfg.buildSessionFactory(); //cfg.buildSessionFactory() hume return ker ke deta hai obj kiska implementaion class of sesionFactory  ka.
		Session session=fac.openSession(); //openSession(); return ker ke dega session ki implementation class ka 
		*/
		Session session=new Configuration().configure().buildSessionFactory().openSession();
		Transaction ex=session.beginTransaction(); //Transaction use kerte werna roll back hojata
		Emp e=new Emp(); //Abhi ye Transient state me hai jese hi ye session me entry lega ye persistance obj ban jaye ga or phir jese hi sesion close hoga ye detached obj ban jaye gaa
		e.setId(id);
		e.setName(name);
		e.setJob(job);                                            //       {int}  {void}
		//session.persist(e); //In hibernate we have two method for insert save & persistence
		int i=(int) session.save(e); //save method return primary key //insert kerne ke liye save method call hoti hai
		ex.commit(); //commit se query to run ho jaye gi but data save nahi hoga rollback ho jata hai
		session.close();//detached obj
		System.out.println(i+" added");
	}

}
/* 1) Configuration() :-An instance of Configuration class allows specifying properties and mappings to applications. This class also builds an immutable SessionFactory.
 * 2) Session :-A Session is used to get a physical connection with a database. 
 * 3)SessionFactory() :-SessionFactory is an Interface which is present in org. hibernate package and it is used to create Session Object.and have method buildSessionFactory()
 * 4)openSession() :-Hibernate SessionFactory openSession() method always opens a new session. We should close this session object once we are done with all the database operations. We should open a new session for each request in multi-threaded environment.
 *
 * */











































































































































































































































































































































































































































